plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
//    kotlin {
//        jvmToolchain {
//            languageVersion.set(JavaLanguageVersion.of("17"))
//        }
//        // Or shorter:
//        jvmToolchain("17")
//        // For example:
//        jvmToolchain(17)
//    }
    namespace = "com.telalarm.wakeupcall"
//    namespace = "com.telalarm.contacts_service"
    compileSdk = 33
    ndkVersion "26.1.10909125"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.telalarm.wakeupcall"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}


dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.2.2" // 추가된 부분
}